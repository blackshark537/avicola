{"version":3,"sources":["./src/app/lot/lot.page.html","./src/app/lot/lot.page.scss","./src/app/lot/lot.module.ts","./src/app/lot/lot.page.ts","./src/app/lot/lot-routing.module.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,4nBAA6jB,E;;;;;;;;;;;;ACA5kB;AAAe,6GAA8C,+GAA+G,E;;;;;;;;;;;;;;;;;;;;;;;ACAnI;AACM;AACF;AAEA;AAEe;AAEvB;AACkB;IAY1C,aAAa,SAAb,aAAa;CAAG;AAAhB,aAAa;IAVzB,8DAAQ,CAAC;QACR,OAAO,EAAE;YACP,4DAAY;YACZ,0DAAW;YACX,0DAAW;YACX,kEAAY;YACZ,wEAAoB;SACrB;QACD,YAAY,EAAE,CAAC,iDAAO,CAAC;KACxB,CAAC;GACW,aAAa,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;ACrBwB;AACR;AAED;AACgB;IAQ5C,OAAO,SAAP,OAAO;IAKlB,YACU,QAAkB,EAClB,MAAc,EACd,UAAsB;QAFtB,aAAQ,GAAR,QAAQ,CAAU;QAClB,WAAM,GAAN,MAAM,CAAQ;QACd,eAAU,GAAV,UAAU,CAAY;QANhC,SAAI,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC;QAC7B,SAAI,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC;IAM7B,CAAC;IAEL,QAAQ;IAER,CAAC;IAED,IAAI,UAAU;QACZ,OAAO,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC;IAChD,CAAC;IAED,QAAQ,CAAC,GAAe;QACtB,QAAO,GAAG,CAAC,MAAM,EAAC;YAChB,KAAK,KAAK;gBACR,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC;gBACvB,MAAM;YACR,KAAK,MAAM;gBACT,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBACnB,MAAM;YACR,KAAK,QAAQ;gBACX,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBACrB,MAAM;YACR;gBACE,MAAM;SACT;IACH,CAAC;IAED,IAAI,CAAC,GAAG;QACN,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC/B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC;IACvC,CAAC;IAED,MAAM,CAAC,GAAG;QACR,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;IACjC,CAAC;CAEF;;YAvDQ,uDAAQ;YAER,sDAAM;YACN,oEAAU;;AAQN,OAAO;IALnB,+DAAS,CAAC;QACT,QAAQ,EAAE,SAAS;QACnB,2EAA8B;;KAE/B,CAAC;GACW,OAAO,CA4CnB;AA5CmB;;;;;;;;;;;;;;;;;;;;ACZqB;AACc;AAElB;AAErC,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,iDAAO;KACnB;CACF,CAAC;IAMW,oBAAoB,SAApB,oBAAoB;CAAG;AAAvB,oBAAoB;IAJhC,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;KACxB,CAAC;GACW,oBAAoB,CAAG;AAAH","file":"lot-lot-module.js","sourcesContent":["export default \"<ion-header [translucent]=\\\"true\\\">\\n  <ion-toolbar [color]=\\\"isMaterial? 'primary' : '' \\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title>Lots</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content [fullscreen]=\\\"true\\\">\\n  <ion-header collapse=\\\"condense\\\">\\n    <ion-toolbar>\\n      <ion-title size=\\\"large\\\">Lots</ion-title>\\n    </ion-toolbar>\\n  </ion-header>\\n\\n  <app-table name=\\\"Lots\\\" [cols]=\\\"cols | async\\\" [rows]=\\\"lots\\\" (selected)=\\\"selected($event)\\\"></app-table>\\n</ion-content>\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJsb3QucGFnZS5zY3NzIn0= */\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LotPageRoutingModule } from './lot-routing.module';\n\nimport { LotPage } from './lot.page';\nimport { SharedModule } from '../shared/shared.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    SharedModule,\n    LotPageRoutingModule\n  ],\n  declarations: [LotPage]\n})\nexport class LotPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Platform } from '@ionic/angular';\nimport { TableEvent } from '../shared';\nimport { Router } from '@angular/router';\nimport { LotService } from '../services/lot/lot.service';\nimport { LotInterface } from '../models';\n\n@Component({\n  selector: 'app-lot',\n  templateUrl: './lot.page.html',\n  styleUrls: ['./lot.page.scss'],\n})\nexport class LotPage implements OnInit {\n\n  cols = this.lotService.cols$;\n  lots = this.lotService.getLots();\n\n  constructor(\n    private platform: Platform,\n    private router: Router,\n    private lotService: LotService\n  ) { }\n\n  ngOnInit() {\n    \n  }\n\n  get isMaterial() {\n    return this.platform.is('ios') ? false : true;\n  }\n\n  selected(evt: TableEvent) {\n    switch(evt.action){\n      case 'new':\n        console.log(evt.action)\n        break;\n      case 'open':\n        this.open(evt.row);\n        break;\n      case 'delete':\n        this.delete(evt.row);\n        break;\n      default:\n        break;\n    }\n  }\n\n  open(row){\n    this.lotService.lot$.next(row);\n    this.router.navigate(['/production'])\n  }\n\n  delete(row){\n    this.lotService.deleteLot(row);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LotPage } from './lot.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LotPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LotPageRoutingModule {}\n"],"sourceRoot":"webpack:///"}